
class Solution(object):
    def longestPalindrome(self, s):
        """
        :type s: str
        :rtype: str
        """
        if len(s) == 0:
            return s

        start = 0
        maxLen = 1 #The len of string.

        
        for i in range(len(s)+1):
            if i-maxLen-2 >= 0 and s[i-maxLen-2:i] == s[i-maxLen-2:i][::-1]:
                start = i-maxLen-2
                maxLen += 2
                continue
            if i-maxLen-1 >= 0 and s[i-maxLen-1:i] == s[i-maxLen-1:i][::-1]:
                start = i-maxLen-1
                maxLen += 1

        return s[start:start+maxLen]


#s
#s = "00000"
s = "00000babad0001abcdcba000"
print(len(s))
#Solution.longestPalindrome("s",s)
print(Solution.longestPalindrome("s",s))
#print(len(Solution.longestPalindrome("s",s)))
